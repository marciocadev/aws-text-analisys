// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Outputs": Object {
    "TextApiGatewayEndpoint1B713D84": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "TextApiGateway437DBC5F",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "TextApiGatewayDeploymentStageprod2573B67D",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TextApiGateway437DBC5F": Object {
      "Properties": Object {
        "Name": "TextAnalisys",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "TextApiGatewayAccount54FA72E1": Object {
      "DependsOn": Array [
        "TextApiGateway437DBC5F",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "TextApiGatewayCloudWatchRoleE5030C8C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "TextApiGatewayCloudWatchRoleE5030C8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TextApiGatewayDeployment754CD196e9ed3d766f59b31160abb8d2644f244a": Object {
      "DependsOn": Array [
        "TextApiGatewaySendTextPOST0FFD62E4",
        "TextApiGatewaySendText3EB8530A",
        "TextApiGatewayPostModel7A560F00",
        "TextApiGatewayPostValidatorD406F27C",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "TextApiGateway437DBC5F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "TextApiGatewayDeploymentStageprod2573B67D": Object {
      "DependsOn": Array [
        "TextApiGatewayAccount54FA72E1",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "TextLogGroupsEBFB9F42",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \\"$context.httpMethod $context.resourcePath $context.protocol\\" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": Object {
          "Ref": "TextApiGatewayDeployment754CD196e9ed3d766f59b31160abb8d2644f244a",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "TextApiGateway437DBC5F",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "TextApiGatewayPostModel7A560F00": Object {
      "Properties": Object {
        "ContentType": "application/json",
        "RestApiId": Object {
          "Ref": "TextApiGateway437DBC5F",
        },
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "txt": Object {
              "type": "string",
            },
          },
          "required": Array [
            "txt",
          ],
          "title": "PostRequest",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGateway::Model",
    },
    "TextApiGatewayPostValidatorD406F27C": Object {
      "Properties": Object {
        "Name": "validator",
        "RestApiId": Object {
          "Ref": "TextApiGateway437DBC5F",
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": false,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "TextApiGatewaySendText3EB8530A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TextApiGateway437DBC5F",
            "RootResourceId",
          ],
        },
        "PathPart": "SendText",
        "RestApiId": Object {
          "Ref": "TextApiGateway437DBC5F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TextApiGatewaySendTextPOST0FFD62E4": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "TextApiGatewayTextAnalisysRole882C4790",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "
      #if ($input.path('$.__type') != \\"\\")
        #set ($context.responseOverride.status = 500)
        {
          \\"requestId\\": \\"$context.requestId\\",
          \\"message\\": \\"$input.path('$.message').trim()\\"
        }
      #else
        #set ($context.responseOverride.status = 200)
        {
          \\"requestId\\": \\"$context.requestId\\",
          \\"executionArn\\": \\"$input.path('$.executionArn').trim()\\",
          \\"startDate\\": \\"$input.path('$.startDate')\\"
        }
      #end
    ",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "
        {
          \\"input\\": \\"$util.escapeJavaScript($input.body)\\",
          \\"name\\": \\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "TextStateMachine95BF0DB2",
                      "Name",
                    ],
                  },
                  "-$util.base64Encode(
            $util.escapeJavaScript(
              $input.body
            )
          ).hashCode()\\",
          \\"stateMachineArn\\": \\"",
                  Object {
                    "Ref": "TextStateMachine95BF0DB2",
                  },
                  "\\"
        }",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":states:action/StartExecution",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
        ],
        "RequestModels": Object {
          "application/json": Object {
            "Ref": "TextApiGatewayPostModel7A560F00",
          },
        },
        "RequestValidatorId": Object {
          "Ref": "TextApiGatewayPostValidatorD406F27C",
        },
        "ResourceId": Object {
          "Ref": "TextApiGatewaySendText3EB8530A",
        },
        "RestApiId": Object {
          "Ref": "TextApiGateway437DBC5F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TextApiGatewayTextAnalisysPolicy1BACED98": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "TextStateMachine95BF0DB2",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TextApiGatewayTextAnalisysPolicy1BACED98",
        "Roles": Array [
          Object {
            "Ref": "TextApiGatewayTextAnalisysRole882C4790",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TextApiGatewayTextAnalisysRole882C4790": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TextLogGroupsEBFB9F42": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": "TextLogs",
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "TextLogGroupsPolicyResourcePolicyB4E96605": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"Statement\\":[{\\"Action\\":[\\"logs:CreateLogStream\\",\\"logs:PutLogEvents\\"],\\"Effect\\":\\"Allow\\",\\"Principal\\":{\\"Service\\":\\"apigateway.amazonaws.com\\"},\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TextLogGroupsEBFB9F42",
                  "Arn",
                ],
              },
              "\\"}],\\"Version\\":\\"2012-10-17\\"}",
            ],
          ],
        },
        "PolicyName": "testTextLogGroupsPolicy84A67066",
      },
      "Type": "AWS::Logs::ResourcePolicy",
    },
    "TextStateMachine95BF0DB2": Object {
      "DependsOn": Array [
        "TextStateMachineRoleDefaultPolicy7A727CB5",
        "TextStateMachineRoleA1896FF6",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"DynamoDBPutText\\",\\"States\\":{\\"DynamoDBPutText\\":{\\"Next\\":\\"DetectDominantLanguage\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"txt\\":{\\"S.$\\":\\"$.txt\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "TextTableAD0EFD79",
              },
              "\\"}},\\"DetectDominantLanguage\\":{\\"Next\\":\\"ListLanguages\\",\\"Type\\":\\"Task\\",\\"Comment\\":\\"Comprehend Detect Dominant Language\\",\\"OutputPath\\":\\"$\\",\\"ResultPath\\":\\"$.result\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:comprehend:detectDominantLanguage\\",\\"Parameters\\":{\\"Text.$\\":\\"$.txt\\"}},\\"ListLanguages\\":{\\"Type\\":\\"Map\\",\\"End\\":true,\\"InputPath\\":\\"$\\",\\"Parameters\\":{\\"item.$\\":\\"$$.Map.Item.Value\\",\\"txt.$\\":\\"$.txt\\"},\\"Iterator\\":{\\"StartAt\\":\\"DynamoDBUpdateLanguage\\",\\"States\\":{\\"DynamoDBUpdateLanguage\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"InputPath\\":\\"$\\",\\"ResultPath\\":null,\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:updateItem\\",\\"Parameters\\":{\\"Key\\":{\\"txt\\":{\\"S.$\\":\\"$.txt\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "TextTableAD0EFD79",
              },
              "\\",\\"ExpressionAttributeNames\\":{\\"#Score.$\\":\\"$.item.LanguageCode\\"},\\"ExpressionAttributeValues\\":{\\":score\\":{\\"N.$\\":\\"States.Format('{}', $.item.Score)\\"}},\\"UpdateExpression\\":\\"SET #Score = :score\\"}}}},\\"ItemsPath\\":\\"$.result.Languages\\"}}}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::GetAtt": Array [
                    "TextLogGroupsEBFB9F42",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "TextStateMachineRoleA1896FF6",
            "Arn",
          ],
        },
        "StateMachineName": "TextAnalisysStateMachine",
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "TextStateMachineRoleA1896FF6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TextStateMachineRoleDefaultPolicy7A727CB5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "TextTableAD0EFD79",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "comprehend:detectDominantLanguage",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "dynamodb:UpdateItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "TextTableAD0EFD79",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TextStateMachineRoleDefaultPolicy7A727CB5",
        "Roles": Array [
          Object {
            "Ref": "TextStateMachineRoleA1896FF6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TextTableAD0EFD79": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "txt",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "txt",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "TextTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
